#!/usr/bin/env python3
"""
Script para automatizar cria√ß√£o de issues no GitHub
Baseado no cronograma das Sprints 1 e 2 do projeto ABP
"""

import requests
import json
from datetime import datetime
import os

# Tentar importar configura√ß√µes do arquivo config.py
try:
    from config import GITHUB_TOKEN, REPO_OWNER, REPO_NAME
    print("‚úÖ Configura√ß√µes carregadas do arquivo config.py")
except ImportError:
    # Configura√ß√µes padr√£o
    GITHUB_TOKEN = os.getenv('GITHUB_TOKEN')
    REPO_OWNER = 'seu-usuario'  # Substitua pelo seu usu√°rio/organiza√ß√£o
    REPO_NAME = 'ABP'  # Substitua pelo nome do reposit√≥rio
    print("‚ö†Ô∏è Usando configura√ß√µes padr√£o. Configure config.py ou vari√°veis de ambiente.")
    print("üí° Dica: Copie config_example.py para config.py e configure seus dados")

# Headers para API do GitHub
headers = {
    'Authorization': f'token {GITHUB_TOKEN}',
    'Accept': 'application/vnd.github.v3+json',
    'Content-Type': 'application/json'
}

def create_issue(title, body, labels, assignees=None, milestone=None):
    """Cria uma issue no GitHub"""
    url = f'https://api.github.com/repos/{REPO_OWNER}/{REPO_NAME}/issues'
    
    data = {
        'title': title,
        'body': body,
        'labels': labels
    }
    
    if assignees:
        data['assignees'] = assignees
    
    if milestone:
        data['milestone'] = milestone
    
    response = requests.post(url, headers=headers, data=json.dumps(data))
    
    if response.status_code == 201:
        print(f"‚úÖ Issue criada: {title}")
        return response.json()
    else:
        print(f"‚ùå Erro ao criar issue '{title}': {response.status_code}")
        print(f"Resposta: {response.text}")
        return None

def sprint_1_issues():
    """Cria issues da Sprint 1"""
    print("üöÄ Criando issues da Sprint 1...")
    
    # Sprint 1 - Issues
    issues_sprint1 = [
        {
            'title': 'SD-001: Configurar HTTPS/TLS',
            'body': '''## üîí Configura√ß√£o HTTPS/TLS

**Descri√ß√£o:** Implementar comunica√ß√£o segura HTTPS/TLS para a aplica√ß√£o

**Crit√©rios de Aceita√ß√£o:**
- [ ] Certificado SSL configurado para API
- [ ] HTTPS habilitado no servidor
- [ ] URLs do Flutter atualizadas para HTTPS
- [ ] Comunica√ß√£o segura testada e funcionando
- [ ] Redirecionamento HTTP ‚Üí HTTPS implementado

**Prioridade:** üî• CR√çTICA
**Respons√°vel:** Isaac, Renan
**Data:** 22/09/2025''',
            'labels': ['SD', 'Backend', 'Seguran√ßa', 'cr√≠tica'],
            'assignees': ['Isaac', 'Renan']
        },
        {
            'title': 'LD-001: Desenvolver logotipo representativo',
            'body': '''## üé® Desenvolvimento de Logotipo

**Descri√ß√£o:** Criar um logotipo representativo e original para o projeto WorcaFlow

**Crit√©rios de Aceita√ß√£o:**
- [ ] Logotipo criado e aprovado pela equipe
- [ ] Vers√µes em diferentes formatos (PNG, SVG)
- [ ] Integra√ß√£o no aplicativo Flutter
- [ ] Documenta√ß√£o do processo de cria√ß√£o

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Felipe, Marcelly, Ana
**Data:** 22/09/2025''',
            'labels': ['LD', 'Frontend', 'Design', 'alta'],
            'assignees': ['Felipe', 'Marcelly', 'Ana']
        },
        {
            'title': 'CN-015: Configura√ß√£o do Banco de Dados',
            'body': '''## üóÑÔ∏è Configura√ß√£o do Banco de Dados

**Descri√ß√£o:** Configurar MySQL para dados de usu√°rios e transa√ß√µes

**Crit√©rios de Aceita√ß√£o:**
- [ ] MySQL configurado para a aplica√ß√£o
- [ ] Schema de usu√°rios e autentica√ß√£o criado
- [ ] Sistema de roles e permiss√µes implementado
- [ ] Modelos ML mantidos separados (arquivos .pkl)
- [ ] Backup autom√°tico do banco configurado

**Prioridade:** üî• CR√çTICA
**Respons√°vel:** Isaac, Renan
**Data:** 24/09/2025''',
            'labels': ['CN', 'Backend', 'Database', 'cr√≠tica'],
            'assignees': ['Isaac', 'Renan']
        },
        {
            'title': 'AM-003: Cria√ß√£o de dados sint√©ticos para treinamento',
            'body': '''## ü§ñ Cria√ß√£o de Dados Sint√©ticos

**Descri√ß√£o:** Gerar dados sint√©ticos para treinamento do modelo de ML

**Crit√©rios de Aceita√ß√£o:**
- [ ] Dados sint√©ticos gerados com qualidade
- [ ] Valida√ß√£o dos dados sint√©ticos
- [ ] Integra√ß√£o com pipeline de treinamento
- [ ] Documenta√ß√£o do processo de gera√ß√£o

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Felipe, Marcelly
**Data:** 24/09/2025, 26/09/2025, 30/09/2025, 02/10/2025''',
            'labels': ['AM', 'ML', 'Dados', 'alta'],
            'assignees': ['Felipe', 'Marcelly']
        },
        {
            'title': 'AM-004: Teste do modelo de machine learning',
            'body': '''## üß™ Teste do Modelo ML

**Descri√ß√£o:** Testar e validar o modelo de machine learning

**Crit√©rios de Aceita√ß√£o:**
- [ ] Testes de precis√£o e recall
- [ ] Valida√ß√£o cruzada implementada
- [ ] M√©tricas de performance documentadas
- [ ] Testes de integra√ß√£o com API

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Marcelly
**Data:** 24/09/2025, 30/09/2025''',
            'labels': ['AM', 'ML', 'Testes', 'alta'],
            'assignees': ['Marcelly']
        },
        {
            'title': 'LD-003: Desenvolvimento Front-end',
            'body': '''## üì± Desenvolvimento Front-end

**Descri√ß√£o:** Desenvolver interface do usu√°rio em Flutter

**Crit√©rios de Aceita√ß√£o:**
- [ ] Telas principais implementadas
- [ ] Navega√ß√£o entre telas funcionando
- [ ] Integra√ß√£o com API backend
- [ ] Testes de interface implementados

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Ana
**Data:** 24/09/2025, 26/09/2025, 30/09/2025, 02/10/2025''',
            'labels': ['LD', 'Frontend', 'Flutter', 'alta'],
            'assignees': ['Ana']
        }
    ]
    
    for issue in issues_sprint1:
        create_issue(
            title=issue['title'],
            body=issue['body'],
            labels=issue['labels'],
            assignees=issue['assignees']
        )

def sprint_2_issues():
    """Cria issues da Sprint 2"""
    print("üöÄ Criando issues da Sprint 2...")
    
    # Sprint 2 - Issues
    issues_sprint2 = [
        {
            'title': 'AM-001: An√°lise e Diagn√≥stico dos Modelos Atuais',
            'body': '''## ü§ñ An√°lise e Diagn√≥stico dos Modelos ML

**Descri√ß√£o:** Avaliar performance e identificar pontos de melhoria dos modelos atuais

**Crit√©rios de Aceita√ß√£o:**
- [ ] AM-001.1: An√°lise de m√©tricas atuais (precis√£o, recall, F1-score)
- [ ] AM-001.2: Identifica√ß√£o de gaps nos dados de treinamento
- [ ] AM-001.3: An√°lise de vi√©s nos modelos existentes
- [ ] AM-001.4: Documenta√ß√£o dos problemas identificados

**Prioridade:** üî• CR√çTICA
**Respons√°vel:** Isaac
**Data:** 13/10/2025''',
            'labels': ['AM', 'ML', 'An√°lise', 'cr√≠tica'],
            'assignees': ['Isaac']
        },
        {
            'title': 'AM-002: Coleta e Prepara√ß√£o de Dados',
            'body': '''## üìä Coleta e Prepara√ß√£o de Dados

**Descri√ß√£o:** Coletar e preparar novos dados para retreinamento

**Crit√©rios de Aceita√ß√£o:**
- [ ] AM-002.1: Coleta de dados hist√≥ricos adicionais
- [ ] AM-002.2: Limpeza e normaliza√ß√£o dos dados
- [ ] AM-002.3: Feature engineering e sele√ß√£o de vari√°veis
- [ ] AM-002.4: Divis√£o em conjuntos de treino/valida√ß√£o/teste

**Prioridade:** üî• CR√çTICA
**Respons√°vel:** Felipe
**Data:** 15/10/2025''',
            'labels': ['AM', 'ML', 'Dados', 'cr√≠tica'],
            'assignees': ['Felipe']
        },
        {
            'title': 'AM-003: Retreinamento e Otimiza√ß√£o',
            'body': '''## üîÑ Retreinamento e Otimiza√ß√£o

**Descri√ß√£o:** Retreinar modelos com dados atualizados

**Crit√©rios de Aceita√ß√£o:**
- [ ] AM-003.1: Retreinamento do modelo de categorias
- [ ] AM-003.2: Retreinamento do modelo de pre√ßos
- [ ] AM-003.3: Otimiza√ß√£o de hiperpar√¢metros
- [ ] AM-003.4: Valida√ß√£o cruzada e m√©tricas de performance

**Prioridade:** üî• CR√çTICA
**Respons√°vel:** Marcelly
**Data:** 17/10/2025''',
            'labels': ['AM', 'ML', 'Treinamento', 'cr√≠tica'],
            'assignees': ['Marcelly']
        },
        {
            'title': 'SD-001: Criptografia E2E Frontend',
            'body': '''## üîê Criptografia E2E Frontend

**Descri√ß√£o:** Implementar criptografia no lado do cliente

**Crit√©rios de Aceita√ß√£o:**
- [ ] SD-001.1: Implementar biblioteca de criptografia no Flutter
- [ ] SD-001.2: Gerar chaves de criptografia no cliente
- [ ] SD-001.3: Criptografar dados sens√≠veis antes do envio
- [ ] SD-001.4: Implementar rota√ß√£o autom√°tica de chaves

**Prioridade:** üî• CR√çTICA
**Respons√°vel:** Ana
**Data:** 21/10/2025''',
            'labels': ['SD', 'Frontend', 'Seguran√ßa', 'cr√≠tica'],
            'assignees': ['Ana']
        },
        {
            'title': 'SD-002: Criptografia E2E Backend',
            'body': '''## üîê Criptografia E2E Backend

**Descri√ß√£o:** Implementar descriptografia segura no servidor

**Crit√©rios de Aceita√ß√£o:**
- [ ] SD-002.1: Implementar descriptografia no backend
- [ ] SD-002.2: Gerenciamento seguro de chaves no servidor
- [ ] SD-002.3: Implementar zero-knowledge para dados sens√≠veis
- [ ] SD-002.4: Logs de auditoria para opera√ß√µes de criptografia

**Prioridade:** üî• CR√çTICA
**Respons√°vel:** Renan
**Data:** 21/10/2025''',
            'labels': ['SD', 'Backend', 'Seguran√ßa', 'cr√≠tica'],
            'assignees': ['Renan']
        },
        {
            'title': 'SD-003: Autentica√ß√£o de 2 Fatores (2FA)',
            'body': '''## üîë Autentica√ß√£o de 2 Fatores

**Descri√ß√£o:** Implementar 2FA para prote√ß√£o adicional

**Crit√©rios de Aceita√ß√£o:**
- [ ] SD-003.1: Integra√ß√£o com Google Authenticator/TOTP
- [ ] SD-003.2: Gera√ß√£o de c√≥digos QR para configura√ß√£o
- [ ] SD-003.3: Implementar backup codes para recupera√ß√£o
- [ ] SD-003.4: Interface Flutter para ativar/desativar 2FA
- [ ] SD-003.5: Valida√ß√£o obrigat√≥ria em login

**Prioridade:** üî• CR√çTICA
**Respons√°vel:** Isaac
**Data:** 21/10/2025''',
            'labels': ['SD', 'Frontend', 'Backend', 'Seguran√ßa', 'cr√≠tica'],
            'assignees': ['Isaac']
        },
        {
            'title': 'CN-001: Containeriza√ß√£o da Aplica√ß√£o Flutter',
            'body': '''## üê≥ Containeriza√ß√£o Flutter

**Descri√ß√£o:** Containerizar aplica√ß√£o Flutter para deploy em nuvem

**Crit√©rios de Aceita√ß√£o:**
- [ ] CN-001.1: Criar Dockerfile para Flutter Web
- [ ] CN-001.2: Otimizar build para produ√ß√£o
- [ ] CN-001.3: Configurar nginx para servir arquivos
- [ ] CN-001.4: Testar container localmente
- [ ] CN-001.5: Configurar vari√°veis de ambiente

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Ana
**Data:** 22/10/2025''',
            'labels': ['CN', 'Frontend', 'Docker', 'Deploy', 'alta'],
            'assignees': ['Ana']
        },
        {
            'title': 'CN-002: Orquestra√ß√£o com Docker Compose',
            'body': '''## üê≥ Docker Compose

**Descri√ß√£o:** Orquestrar PostgreSQL + Excel (dados ML) em containers

**Crit√©rios de Aceita√ß√£o:**
- [ ] CN-002.1: Criar docker-compose.yml com PostgreSQL
- [ ] CN-002.2: Configurar rede entre containers
- [ ] CN-002.3: Volumes para persist√™ncia do banco de usu√°rios
- [ ] CN-002.4: Volume para arquivo Excel (dados ML)
- [ ] CN-002.5: Vari√°veis de ambiente seguras
- [ ] CN-002.6: Scripts de inicializa√ß√£o do banco

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Renan
**Data:** 22/10/2025''',
            'labels': ['CN', 'DevOps', 'Docker', 'Database', 'alta'],
            'assignees': ['Renan']
        },
        {
            'title': 'CN-003: Pipeline CI/CD Backend',
            'body': '''## üîÑ Pipeline CI/CD Backend

**Descri√ß√£o:** Implementar pipeline de CI/CD para API

**Crit√©rios de Aceita√ß√£o:**
- [ ] CN-003.1: Configurar workflow de build e test
- [ ] CN-003.2: Implementar deploy autom√°tico para produ√ß√£o
- [ ] CN-003.3: Integrar testes automatizados no pipeline
- [ ] CN-003.4: Configurar notifica√ß√µes de status
- [ ] CN-003.5: Implementar rollback autom√°tico em caso de falha

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Isaac
**Data:** 22/10/2025''',
            'labels': ['CN', 'Backend', 'CI/CD', 'DevOps', 'alta'],
            'assignees': ['Isaac']
        },
        {
            'title': 'CN-004: Pipeline CI/CD Frontend',
            'body': '''## üîÑ Pipeline CI/CD Frontend

**Descri√ß√£o:** Implementar pipeline de CI/CD para Flutter

**Crit√©rios de Aceita√ß√£o:**
- [ ] CN-004.1: Configurar build autom√°tico do Flutter
- [ ] CN-004.2: Implementar deploy da vers√£o web
- [ ] CN-004.3: Integrar testes de widget
- [ ] CN-004.4: Configurar versionamento autom√°tico
- [ ] CN-004.5: Otimizar cache de depend√™ncias

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Felipe
**Data:** 22/10/2025''',
            'labels': ['CN', 'Frontend', 'CI/CD', 'DevOps', 'alta'],
            'assignees': ['Felipe']
        },
        {
            'title': 'PD-001: Otimiza√ß√£o da Interface Mobile',
            'body': '''## üì± Otimiza√ß√£o Interface Mobile

**Descri√ß√£o:** Melhorar experi√™ncia do usu√°rio em dispositivos m√≥veis

**Crit√©rios de Aceita√ß√£o:**
- [ ] PD-001.1: Otimizar layouts para diferentes tamanhos de tela
- [ ] PD-001.2: Implementar gestos touch nativos
- [ ] PD-001.3: Melhorar performance em dispositivos m√≥veis
- [ ] PD-001.4: Implementar cache offline para dados essenciais

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Marcelly
**Data:** 22/10/2025''',
            'labels': ['PD', 'Frontend', 'Mobile', 'UX', 'alta'],
            'assignees': ['Marcelly']
        },
        {
            'title': 'PD-002: Integra√ß√£o com Recursos Mobile',
            'body': '''## üì± Recursos Mobile

**Descri√ß√£o:** Aproveitar recursos espec√≠ficos de dispositivos m√≥veis

**Crit√©rios de Aceita√ß√£o:**
- [ ] PD-002.1: Implementar notifica√ß√µes push
- [ ] PD-002.2: Integrar com c√¢mera para upload de imagens
- [ ] PD-002.3: Implementar geolocaliza√ß√£o para prestadores
- [ ] PD-002.4: Configurar biometria para autentica√ß√£o

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Ana
**Data:** 23/10/2025''',
            'labels': ['PD', 'Frontend', 'Mobile', 'Seguran√ßa', 'alta'],
            'assignees': ['Ana']
        },
        {
            'title': 'PD-003: Testes em Dispositivos M√≥veis',
            'body': '''## üì± Testes Mobile

**Descri√ß√£o:** Implementar testes espec√≠ficos para mobile

**Crit√©rios de Aceita√ß√£o:**
- [ ] PD-003.1: Testes de widget em diferentes dispositivos
- [ ] PD-003.2: Testes de performance mobile
- [ ] PD-003.3: Testes de usabilidade em dispositivos reais
- [ ] PD-003.4: Testes de compatibilidade com diferentes vers√µes

**Prioridade:** ‚ö†Ô∏è ALTA
**Respons√°vel:** Renan
**Data:** 23/10/2025''',
            'labels': ['PD', 'Frontend', 'Mobile', 'Testes', 'Qualidade', 'alta'],
            'assignees': ['Renan']
        }
    ]
    
    for issue in issues_sprint2:
        create_issue(
            title=issue['title'],
            body=issue['body'],
            labels=issue['labels'],
            assignees=issue['assignees']
        )

def main():
    """Fun√ß√£o principal"""
    print("üöÄ Iniciando cria√ß√£o autom√°tica de issues do GitHub...")
    print("=" * 60)
    
    if not GITHUB_TOKEN:
        print("‚ùå Erro: GITHUB_TOKEN n√£o encontrado!")
        print("Configure a vari√°vel de ambiente GITHUB_TOKEN")
        return
    
    print(f"üìÅ Reposit√≥rio: {REPO_OWNER}/{REPO_NAME}")
    print("=" * 60)
    
    # Criar issues da Sprint 1
    print("\nüìã SPRINT 1 - FUNDA√á√ÉO SEGURA")
    sprint_1_issues()
    
    print("\n" + "=" * 60)
    
    # Criar issues da Sprint 2
    print("\nüìã SPRINT 2 - SEGURAN√áA AVAN√áADA E AUTOMA√á√ÉO")
    sprint_2_issues()
    
    print("\n" + "=" * 60)
    print("‚úÖ Processo conclu√≠do!")
    print("üìù Verifique as issues criadas no GitHub")

if __name__ == "__main__":
    main()
